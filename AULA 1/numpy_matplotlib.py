# -*- coding: utf-8 -*-
"""Numpy_Matplot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pF7-jjWOub2TgR3DMXqxX7BuMLIafCfF
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import random

# Definindo o nome do arquivo CSV
nome_arquivo_csv = "precos_imoveis.csv"

# Função para gerar dados aleatórios de preços de imóveis
def gerar_dados_imoveis(num_linhas):
    dados = []
    for _ in range(num_linhas):
      codigo_imovel = random.randint(1000, 9999)
      endereco = f"Rua {random.choice(['A', 'B', 'C'])}, {random.randint(1, 100)}"
      bairro = random.choice(['Centro', 'Vila', 'Bairro Novo'])
      tipo_imovel = random.choice(['Casa', 'Apartamento', 'Sobrado'])
      area_total = round(random.uniform(50, 300), 2)
      quartos = random.randint(1, 5)
      banheiros = random.randint(1, 3)
      vagas_garagem = random.randint(0, 2)
      ano_construcao = random.randint(1950, 2020)
      preco = round(random.uniform(100000, 1000000), 2)
      dados.append([codigo_imovel, endereco, bairro, tipo_imovel, area_total, quartos, banheiros, vagas_garagem, ano_construcao, preco])
    return dados

# Gerando os dados de preços de imóveis
dados_imoveis = gerar_dados_imoveis(10000)

# Escrevendo os dados no arquivo CSV
cabecalho = ["codigo_imovel", "endereco", "bairro", "tipo_imovel", "area_total", "quartos", "banheiros", "vagas_garagem", "ano_construcao", "preco"]
df = pd.DataFrame(dados_imoveis, columns=cabecalho)
df.to_csv(nome_arquivo_csv, index=False)

# Importando os dados do arquivo CSV
df = pd.read_csv(nome_arquivo_csv)

# Explorando os dados
print(df.describe())
print(df.info())

# Analisando a distribuição dos preços
preco_mean = df['preco'].mean()
preco_std = df['preco'].std()
preco_min = df['preco'].min()
preco_max = df['preco'].max()
print(f'Média de preço: {preco_mean}')
print(f'Desvio padrão de preço: {preco_std}')
print(f'Menor preço: {preco_min}')
print(f'Maior preço: {preco_max}')

# Histograma da distribuição dos preços
plt.figure(figsize=(10, 6))
sns.histplot(df['preco'], kde=True)
plt.title('Distribuição dos Preços dos Imóveis')
plt.xlabel('Preço')
plt.ylabel('Frequência')
plt.show()

# Comparando preços por região (bairro)
preco_por_bairro = df.groupby('bairro')['preco'].agg(['mean', 'std']).reset_index()
print(preco_por_bairro)

# Identificando áreas valorizadas
bairros_mais_caros = preco_por_bairro.sort_values(by='mean', ascending=False)
print("Bairros com os preços médios mais altos:")
print(bairros_mais_caros)

# Preço por metro quadrado
df['preco_m2'] = df['preco'] / df['area_total']
preco_m2_por_bairro = df.groupby('bairro')['preco_m2'].mean().reset_index()
bairros_mais_valorizados = preco_m2_por_bairro.sort_values(by='preco_m2', ascending=False)
print("Bairros com os preços mais altos por metro quadrado:")
print(bairros_mais_valorizados)

# Visualizando os dados
plt.figure(figsize=(14, 7))
sns.boxplot(x='bairro', y='preco', data=df)
plt.title('Distribuição dos Preços por Bairro')
plt.xlabel('Bairro')
plt.ylabel('Preço')
plt.show()

plt.figure(figsize=(14, 7))
sns.barplot(x='bairro', y='preco_m2', data=bairros_mais_valorizados)
plt.title('Preço Médio por Metro Quadrado por Bairro')
plt.xlabel('Bairro')
plt.ylabel('Preço por m²')
plt.show()