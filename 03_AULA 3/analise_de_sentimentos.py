# -*- coding: utf-8 -*-
"""Analise de Sentimentos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1myh8hxYpvJS3Jeg10F_l2SBtMAJXR0ZG

###**Análise de Sentimentos**
##Programação em Inteligência Artificial
###Prof. Msc. Ailton J. Santos
"""

import pandas as pd
import numpy as np
import random
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB

tweets = []
sentimentos = []

# Criando tweets aleatórios
palavras_pos = ["maravilhoso", "incrível", "adoro", "recomendo", "perfeito"]
palavras_neg = ["ruim", "horrível", "decepcionante", "não recomendo", "péssimo"]
palavras_neu = ["bom", "legal", "ok", "interessante", "informativo"]

for _ in range(100):
    # Tweet positivo
    tweet_pos = random.choice(palavras_pos) + " " + random.choice(palavras_pos)
    tweets.append(tweet_pos)
    sentimentos.append(2)

    # Tweet neutro
    tweet_neu = random.choice(palavras_neu) + " " + random.choice(palavras_neu)
    tweets.append(tweet_neu)
    sentimentos.append(1)

    # Tweet negativo
    tweet_neg = random.choice(palavras_neg) + " " + random.choice(palavras_neg)
    tweets.append(tweet_neg)
    sentimentos.append(0)

# Criando um DataFrame
dados_tweets = pd.DataFrame({
    "tweet": tweets,
    "sentimento": sentimentos
})

dados_tweets.to_csv("dados_tweets.csv", index=False)

# Carregar dados de tweets
dados_tweets = pd.read_csv('dados_tweets.csv')

# Separar tweets e rótulos
tweets = dados_tweets['tweet']
rotulos = dados_tweets['sentimento']

# Converter tweets em vetores de palavras
vectorizer = TfidfVectorizer()
vetores_tweets = vectorizer.fit_transform(tweets)

# Dividir dados em treino e teste
X_treino, X_teste, y_treino, y_teste = train_test_split(vetores_tweets, rotulos, test_size=0.2, random_state=42)

# Treinar modelo Naive Bayes
modelo_nb = MultinomialNB()
modelo_nb.fit(X_treino, y_treino)

# Avaliar desempenho do modelo
acuracia = modelo_nb.score(X_teste, y_teste)
print("Acurácia do modelo:", acuracia)

# Classificar novos tweets
tweet_novo = "Amei o novo produto da marca! #maravilhoso"
vetor_novo = vectorizer.transform([tweet_novo])
sentimento_predito = modelo_nb.predict(vetor_novo)
print("Sentimento predito para o novo tweet:", sentimento_predito[0])